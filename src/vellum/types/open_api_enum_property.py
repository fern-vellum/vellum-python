# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .open_api_enum_property_enum_item import OpenApiEnumPropertyEnumItem
from .open_api_enum_property_default import OpenApiEnumPropertyDefault
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class OpenApiEnumProperty(UniversalBaseModel):
    """
    An OpenAPI specification of a property with type 'enum'
    """

    type: typing.Literal["enum"] = "enum"
    title: typing.Optional[str] = None
    description: typing.Optional[str] = None
    enum: typing.List[typing.Optional[OpenApiEnumPropertyEnumItem]]
    default: typing.Optional[OpenApiEnumPropertyDefault] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
