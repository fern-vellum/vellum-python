// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`TextSearchNode > basic > getNodeDisplayFile 1`] = `
"from vellum_ee.workflows.display.nodes import BaseSearchNodeDisplay
from ...nodes.search_node import SearchNode
from uuid import UUID
from vellum_ee.workflows.display.nodes.types import (
    NodeOutputDisplay,
    PortDisplayOverrides,
)
from vellum_ee.workflows.display.vellum import NodeDisplayData, NodeDisplayPosition


class SearchNodeDisplay(BaseSearchNodeDisplay[SearchNode]):
    label = "Search Node"
    node_id = UUID("search")
    target_handle_id = UUID("370d712d-3369-424e-bcf7-f4da1aef3928")
    node_input_ids_by_name = {
        "query": UUID("f3a0d8b9-7772-4db6-8e28-f49f8c4d9e2a"),
        "document_index_id": UUID("b49bc1ab-2ad5-4cf2-8966-5cc87949900d"),
        "weights": UUID("1daf3180-4b92-472a-8665-a7703c84a94e"),
        "limit": UUID("161d264e-d04e-4c37-8e50-8bbb4c90c46e"),
        "separator": UUID("4eddefc0-90d5-422a-aec2-bc94c8f1d83c"),
        "result_merging_enabled": UUID("dc9f880b-81bc-4644-b025-8f7d5db23a48"),
        "external_id_filters": UUID("61933e79-b0c2-4e3c-bf07-e2d93b9d9c54"),
        "metadata_filters": UUID("7c43b315-d1f2-4727-9540-6cc3fd4641f3"),
    }
    output_display = {
        SearchNode.Outputs.results: NodeOutputDisplay(
            id=UUID("77839b3c-fe1c-4dcb-9c61-2fac827f729b"), name="results"
        ),
        SearchNode.Outputs.text: NodeOutputDisplay(
            id=UUID("d56d7c49-7b45-4933-9779-2bd7f82c2141"), name="text"
        ),
    }
    port_displays = {
        SearchNode.Ports.default: PortDisplayOverrides(
            id=UUID("e4dedb66-0638-4f0c-9941-6420bfe353b2")
        )
    }
    display_data = NodeDisplayData(
        position=NodeDisplayPosition(x=0, y=0), width=None, height=None
    )
"
`;

exports[`TextSearchNode > basic > getNodeFile 1`] = `
"from vellum.workflows.nodes.displayable import SearchNode as BaseSearchNode
from ..inputs import Inputs
from vellum import (
    SearchRequestOptionsRequest,
    SearchWeightsRequest,
    SearchResultMergingRequest,
    SearchFiltersRequest,
)


class SearchNode(BaseSearchNode):
    query = Inputs.query
    document_index = "d5beca61-aacb-4b22-a70c-776a1e025aa4"
    options = SearchRequestOptionsRequest(
        limit=8,
        weights=SearchWeightsRequest(semantic_similarity=0.8, keywords=0.2),
        result_merging=SearchResultMergingRequest(enabled=True),
        filters=SearchFiltersRequest(external_ids=None, metadata=None),
    )
    chunk_separator = "\\n\\n#####\\n\\n"
"
`;

exports[`TextSearchNode > reject on error enabled > getNodeDisplayFile 1`] = `
"from vellum_ee.workflows.display.nodes import BaseTryNodeDisplay, BaseSearchNodeDisplay
from uuid import UUID
from ...nodes.search_node import SearchNode
from vellum_ee.workflows.display.nodes.types import (
    NodeOutputDisplay,
    PortDisplayOverrides,
)
from vellum_ee.workflows.display.vellum import NodeDisplayData, NodeDisplayPosition


class TryNodeDisplay(BaseTryNodeDisplay):
    error_output_id = UUID("af589f73-effe-4a80-b48f-fb912ac6ce67")


class SearchNodeDisplay(BaseSearchNodeDisplay[SearchNode]):
    label = "Search Node"
    node_id = UUID("search")
    target_handle_id = UUID("370d712d-3369-424e-bcf7-f4da1aef3928")
    node_input_ids_by_name = {
        "query": UUID("f3a0d8b9-7772-4db6-8e28-f49f8c4d9e2a"),
        "document_index_id": UUID("b49bc1ab-2ad5-4cf2-8966-5cc87949900d"),
        "weights": UUID("1daf3180-4b92-472a-8665-a7703c84a94e"),
        "limit": UUID("161d264e-d04e-4c37-8e50-8bbb4c90c46e"),
        "separator": UUID("4eddefc0-90d5-422a-aec2-bc94c8f1d83c"),
        "result_merging_enabled": UUID("dc9f880b-81bc-4644-b025-8f7d5db23a48"),
        "external_id_filters": UUID("61933e79-b0c2-4e3c-bf07-e2d93b9d9c54"),
        "metadata_filters": UUID("7c43b315-d1f2-4727-9540-6cc3fd4641f3"),
    }
    output_display = {
        SearchNode.Outputs.results: NodeOutputDisplay(
            id=UUID("77839b3c-fe1c-4dcb-9c61-2fac827f729b"), name="results"
        ),
        SearchNode.Outputs.text: NodeOutputDisplay(
            id=UUID("d56d7c49-7b45-4933-9779-2bd7f82c2141"), name="text"
        ),
    }
    port_displays = {
        SearchNode.Ports.default: PortDisplayOverrides(
            id=UUID("e4dedb66-0638-4f0c-9941-6420bfe353b2")
        )
    }
    display_data = NodeDisplayData(
        position=NodeDisplayPosition(x=0, y=0), width=None, height=None
    )
"
`;

exports[`TextSearchNode > reject on error enabled > getNodeFile 1`] = `
"from vellum.workflows.nodes.displayable import SearchNode as BaseSearchNode, TryNode
from ..inputs import Inputs
from vellum import (
    SearchRequestOptionsRequest,
    SearchWeightsRequest,
    SearchResultMergingRequest,
    SearchFiltersRequest,
)


@TryNode.wrap()
class SearchNode(BaseSearchNode):
    query = Inputs.query
    document_index = "d5beca61-aacb-4b22-a70c-776a1e025aa4"
    options = SearchRequestOptionsRequest(
        limit=8,
        weights=SearchWeightsRequest(semantic_similarity=0.8, keywords=0.2),
        result_merging=SearchResultMergingRequest(enabled=True),
        filters=SearchFiltersRequest(external_ids=None, metadata=None),
    )
    chunk_separator = "\\n\\n#####\\n\\n"
"
`;
